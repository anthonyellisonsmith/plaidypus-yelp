{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpProxyMiddleware = void 0;\n\nconst httpProxy = require(\"http-proxy\");\n\nconst config_factory_1 = require(\"./config-factory\");\n\nconst contextMatcher = require(\"./context-matcher\");\n\nconst handlers = require(\"./handlers\");\n\nconst logger_1 = require(\"./logger\");\n\nconst PathRewriter = require(\"./path-rewriter\");\n\nconst Router = require(\"./router\");\n\nclass HttpProxyMiddleware {\n  constructor(context, opts) {\n    this.logger = logger_1.getInstance();\n    this.wsInternalSubscribed = false;\n    this.serverOnCloseSubscribed = false; // https://github.com/Microsoft/TypeScript/wiki/'this'-in-TypeScript#red-flags-for-this\n\n    this.middleware = (req, res, next) => __awaiter(this, void 0, void 0, function* () {\n      var _a, _b;\n\n      if (this.shouldProxy(this.config.context, req)) {\n        try {\n          const activeProxyOptions = yield this.prepareProxyRequest(req);\n          this.proxy.web(req, res, activeProxyOptions);\n        } catch (err) {\n          next(err);\n        }\n      } else {\n        next();\n      }\n      /**\n       * Get the server object to subscribe to server events;\n       * 'upgrade' for websocket and 'close' for graceful shutdown\n       *\n       * NOTE:\n       * req.socket: node >= 13\n       * req.connection: node < 13 (Remove this when node 12/13 support is dropped)\n       */\n\n\n      const server = (_b = (_a = req.socket) !== null && _a !== void 0 ? _a : req.connection) === null || _b === void 0 ? void 0 : _b.server;\n\n      if (server && !this.serverOnCloseSubscribed) {\n        server.on('close', () => {\n          this.logger.info('[HPM] server close signal received: closing proxy server');\n          this.proxy.close();\n        });\n        this.serverOnCloseSubscribed = true;\n      }\n\n      if (this.proxyOptions.ws === true) {\n        // use initial request to access the server object to subscribe to http upgrade event\n        this.catchUpgradeRequest(server);\n      }\n    });\n\n    this.catchUpgradeRequest = server => {\n      if (!this.wsInternalSubscribed) {\n        server.on('upgrade', this.handleUpgrade); // prevent duplicate upgrade handling;\n        // in case external upgrade is also configured\n\n        this.wsInternalSubscribed = true;\n      }\n    };\n\n    this.handleUpgrade = (req, socket, head) => __awaiter(this, void 0, void 0, function* () {\n      if (this.shouldProxy(this.config.context, req)) {\n        const activeProxyOptions = yield this.prepareProxyRequest(req);\n        this.proxy.ws(req, socket, head, activeProxyOptions);\n        this.logger.info('[HPM] Upgrading to WebSocket');\n      }\n    });\n    /**\n     * Determine whether request should be proxied.\n     *\n     * @private\n     * @param  {String} context [description]\n     * @param  {Object} req     [description]\n     * @return {Boolean}\n     */\n\n\n    this.shouldProxy = (context, req) => {\n      const path = req.originalUrl || req.url;\n      return contextMatcher.match(context, path, req);\n    };\n    /**\n     * Apply option.router and option.pathRewrite\n     * Order matters:\n     *    Router uses original path for routing;\n     *    NOT the modified path, after it has been rewritten by pathRewrite\n     * @param {Object} req\n     * @return {Object} proxy options\n     */\n\n\n    this.prepareProxyRequest = req => __awaiter(this, void 0, void 0, function* () {\n      // https://github.com/chimurai/http-proxy-middleware/issues/17\n      // https://github.com/chimurai/http-proxy-middleware/issues/94\n      req.url = req.originalUrl || req.url; // store uri before it gets rewritten for logging\n\n      const originalPath = req.url;\n      const newProxyOptions = Object.assign({}, this.proxyOptions); // Apply in order:\n      // 1. option.router\n      // 2. option.pathRewrite\n\n      yield this.applyRouter(req, newProxyOptions);\n      yield this.applyPathRewrite(req, this.pathRewriter); // debug logging for both http(s) and websockets\n\n      if (this.proxyOptions.logLevel === 'debug') {\n        const arrow = logger_1.getArrow(originalPath, req.url, this.proxyOptions.target, newProxyOptions.target);\n        this.logger.debug('[HPM] %s %s %s %s', req.method, originalPath, arrow, newProxyOptions.target);\n      }\n\n      return newProxyOptions;\n    }); // Modify option.target when router present.\n\n\n    this.applyRouter = (req, options) => __awaiter(this, void 0, void 0, function* () {\n      let newTarget;\n\n      if (options.router) {\n        newTarget = yield Router.getTarget(req, options);\n\n        if (newTarget) {\n          this.logger.debug('[HPM] Router new target: %s -> \"%s\"', options.target, newTarget);\n          options.target = newTarget;\n        }\n      }\n    }); // rewrite path\n\n\n    this.applyPathRewrite = (req, pathRewriter) => __awaiter(this, void 0, void 0, function* () {\n      if (pathRewriter) {\n        const path = yield pathRewriter(req.url, req);\n\n        if (typeof path === 'string') {\n          req.url = path;\n        } else {\n          this.logger.info('[HPM] pathRewrite: No rewritten path found. (%s)', req.url);\n        }\n      }\n    });\n\n    this.logError = (err, req, res) => {\n      const hostname = req.headers && req.headers.host || req.hostname || req.host; // (websocket) || (node0.10 || node 4/5)\n\n      const target = this.proxyOptions.target.host || this.proxyOptions.target;\n      const errorMessage = '[HPM] Error occurred while trying to proxy request %s from %s to %s (%s) (%s)';\n      const errReference = 'https://nodejs.org/api/errors.html#errors_common_system_errors'; // link to Node Common Systems Errors page\n\n      this.logger.error(errorMessage, req.url, hostname, target, err.code || err, errReference);\n    };\n\n    this.config = config_factory_1.createConfig(context, opts);\n    this.proxyOptions = this.config.options; // create proxy\n\n    this.proxy = httpProxy.createProxyServer({});\n    this.logger.info(`[HPM] Proxy created: ${this.config.context}  -> ${this.proxyOptions.target}`);\n    this.pathRewriter = PathRewriter.createPathRewriter(this.proxyOptions.pathRewrite); // returns undefined when \"pathRewrite\" is not provided\n    // attach handler to http-proxy events\n\n    handlers.init(this.proxy, this.proxyOptions); // log errors for debug purpose\n\n    this.proxy.on('error', this.logError); // https://github.com/chimurai/http-proxy-middleware/issues/19\n    // expose function to upgrade externally\n\n    this.middleware.upgrade = (req, socket, head) => {\n      if (!this.wsInternalSubscribed) {\n        this.handleUpgrade(req, socket, head);\n      }\n    };\n  }\n\n}\n\nexports.HttpProxyMiddleware = HttpProxyMiddleware;","map":{"version":3,"sources":["C:/Users/Anthony/reactjs/plaidypus-code-challenge/node_modules/http-proxy-middleware/dist/http-proxy-middleware.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","HttpProxyMiddleware","httpProxy","require","config_factory_1","contextMatcher","handlers","logger_1","PathRewriter","Router","constructor","context","opts","logger","getInstance","wsInternalSubscribed","serverOnCloseSubscribed","middleware","req","res","_a","_b","shouldProxy","config","activeProxyOptions","prepareProxyRequest","proxy","web","err","server","socket","connection","on","info","close","proxyOptions","ws","catchUpgradeRequest","handleUpgrade","head","path","originalUrl","url","match","originalPath","newProxyOptions","assign","applyRouter","applyPathRewrite","pathRewriter","logLevel","arrow","getArrow","target","debug","method","options","newTarget","router","getTarget","logError","hostname","headers","host","errorMessage","errReference","error","code","createConfig","createProxyServer","createPathRewriter","pathRewrite","init","upgrade"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpProxyMiddleware = void 0;\nconst httpProxy = require(\"http-proxy\");\nconst config_factory_1 = require(\"./config-factory\");\nconst contextMatcher = require(\"./context-matcher\");\nconst handlers = require(\"./handlers\");\nconst logger_1 = require(\"./logger\");\nconst PathRewriter = require(\"./path-rewriter\");\nconst Router = require(\"./router\");\nclass HttpProxyMiddleware {\n    constructor(context, opts) {\n        this.logger = logger_1.getInstance();\n        this.wsInternalSubscribed = false;\n        this.serverOnCloseSubscribed = false;\n        // https://github.com/Microsoft/TypeScript/wiki/'this'-in-TypeScript#red-flags-for-this\n        this.middleware = (req, res, next) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            if (this.shouldProxy(this.config.context, req)) {\n                try {\n                    const activeProxyOptions = yield this.prepareProxyRequest(req);\n                    this.proxy.web(req, res, activeProxyOptions);\n                }\n                catch (err) {\n                    next(err);\n                }\n            }\n            else {\n                next();\n            }\n            /**\n             * Get the server object to subscribe to server events;\n             * 'upgrade' for websocket and 'close' for graceful shutdown\n             *\n             * NOTE:\n             * req.socket: node >= 13\n             * req.connection: node < 13 (Remove this when node 12/13 support is dropped)\n             */\n            const server = (_b = ((_a = req.socket) !== null && _a !== void 0 ? _a : req.connection)) === null || _b === void 0 ? void 0 : _b.server;\n            if (server && !this.serverOnCloseSubscribed) {\n                server.on('close', () => {\n                    this.logger.info('[HPM] server close signal received: closing proxy server');\n                    this.proxy.close();\n                });\n                this.serverOnCloseSubscribed = true;\n            }\n            if (this.proxyOptions.ws === true) {\n                // use initial request to access the server object to subscribe to http upgrade event\n                this.catchUpgradeRequest(server);\n            }\n        });\n        this.catchUpgradeRequest = (server) => {\n            if (!this.wsInternalSubscribed) {\n                server.on('upgrade', this.handleUpgrade);\n                // prevent duplicate upgrade handling;\n                // in case external upgrade is also configured\n                this.wsInternalSubscribed = true;\n            }\n        };\n        this.handleUpgrade = (req, socket, head) => __awaiter(this, void 0, void 0, function* () {\n            if (this.shouldProxy(this.config.context, req)) {\n                const activeProxyOptions = yield this.prepareProxyRequest(req);\n                this.proxy.ws(req, socket, head, activeProxyOptions);\n                this.logger.info('[HPM] Upgrading to WebSocket');\n            }\n        });\n        /**\n         * Determine whether request should be proxied.\n         *\n         * @private\n         * @param  {String} context [description]\n         * @param  {Object} req     [description]\n         * @return {Boolean}\n         */\n        this.shouldProxy = (context, req) => {\n            const path = req.originalUrl || req.url;\n            return contextMatcher.match(context, path, req);\n        };\n        /**\n         * Apply option.router and option.pathRewrite\n         * Order matters:\n         *    Router uses original path for routing;\n         *    NOT the modified path, after it has been rewritten by pathRewrite\n         * @param {Object} req\n         * @return {Object} proxy options\n         */\n        this.prepareProxyRequest = (req) => __awaiter(this, void 0, void 0, function* () {\n            // https://github.com/chimurai/http-proxy-middleware/issues/17\n            // https://github.com/chimurai/http-proxy-middleware/issues/94\n            req.url = req.originalUrl || req.url;\n            // store uri before it gets rewritten for logging\n            const originalPath = req.url;\n            const newProxyOptions = Object.assign({}, this.proxyOptions);\n            // Apply in order:\n            // 1. option.router\n            // 2. option.pathRewrite\n            yield this.applyRouter(req, newProxyOptions);\n            yield this.applyPathRewrite(req, this.pathRewriter);\n            // debug logging for both http(s) and websockets\n            if (this.proxyOptions.logLevel === 'debug') {\n                const arrow = logger_1.getArrow(originalPath, req.url, this.proxyOptions.target, newProxyOptions.target);\n                this.logger.debug('[HPM] %s %s %s %s', req.method, originalPath, arrow, newProxyOptions.target);\n            }\n            return newProxyOptions;\n        });\n        // Modify option.target when router present.\n        this.applyRouter = (req, options) => __awaiter(this, void 0, void 0, function* () {\n            let newTarget;\n            if (options.router) {\n                newTarget = yield Router.getTarget(req, options);\n                if (newTarget) {\n                    this.logger.debug('[HPM] Router new target: %s -> \"%s\"', options.target, newTarget);\n                    options.target = newTarget;\n                }\n            }\n        });\n        // rewrite path\n        this.applyPathRewrite = (req, pathRewriter) => __awaiter(this, void 0, void 0, function* () {\n            if (pathRewriter) {\n                const path = yield pathRewriter(req.url, req);\n                if (typeof path === 'string') {\n                    req.url = path;\n                }\n                else {\n                    this.logger.info('[HPM] pathRewrite: No rewritten path found. (%s)', req.url);\n                }\n            }\n        });\n        this.logError = (err, req, res) => {\n            const hostname = (req.headers && req.headers.host) || req.hostname || req.host; // (websocket) || (node0.10 || node 4/5)\n            const target = this.proxyOptions.target.host || this.proxyOptions.target;\n            const errorMessage = '[HPM] Error occurred while trying to proxy request %s from %s to %s (%s) (%s)';\n            const errReference = 'https://nodejs.org/api/errors.html#errors_common_system_errors'; // link to Node Common Systems Errors page\n            this.logger.error(errorMessage, req.url, hostname, target, err.code || err, errReference);\n        };\n        this.config = config_factory_1.createConfig(context, opts);\n        this.proxyOptions = this.config.options;\n        // create proxy\n        this.proxy = httpProxy.createProxyServer({});\n        this.logger.info(`[HPM] Proxy created: ${this.config.context}  -> ${this.proxyOptions.target}`);\n        this.pathRewriter = PathRewriter.createPathRewriter(this.proxyOptions.pathRewrite); // returns undefined when \"pathRewrite\" is not provided\n        // attach handler to http-proxy events\n        handlers.init(this.proxy, this.proxyOptions);\n        // log errors for debug purpose\n        this.proxy.on('error', this.logError);\n        // https://github.com/chimurai/http-proxy-middleware/issues/19\n        // expose function to upgrade externally\n        this.middleware.upgrade = (req, socket, head) => {\n            if (!this.wsInternalSubscribed) {\n                this.handleUpgrade(req, socket, head);\n            }\n        };\n    }\n}\nexports.HttpProxyMiddleware = HttpProxyMiddleware;\n"]},"metadata":{},"sourceType":"script"}